[tool.poetry]
name = "fastapi-cqrs-mediator"
version = "0.1.0"
description = ""
authors = ["ocbunknown"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.115.4"
alembic = "^1.13.3"
sqlalchemy = "^2.0.36"
uvloop = "^0.21.0"
asyncpg = "^0.30.0"
pydantic-settings = "^2.6.1"
orjson = "^3.10.11"
uvicorn = "^0.32.0"
argon2-cffi = "^23.1.0"
certifi = "^2024.8.30"
aiohttp = "^3.11.6"
redis = "^5.2.0"
types-redis = "^4.6.0.20241004"
greenlet = "^3.1.1"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "*"
pytest-asyncio = "*"

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
ruff = "*"
mypy = "*"

[tool.mypy]
# disable_error_code = ["union-attr", "var-annotated"]
warn_unused_ignores = false
follow_imports_for_stubs = true
pretty = true
show_absolute_path = true
hide_error_codes = false
show_error_context = true
strict = true
warn_unreachable = true
warn_no_return = true

[tool.ruff]
lint.ignore = ["E501", "B008", "C901", "W191", "UP007", "UP006"]

lint.select = ["E", "W", "F", "I", "C", "B", "UP"]

[tool.ruff.lint.extend-per-file-ignores]
"tests/*.py" = ["ANN401", "S101", "S311"]

[tool.pytest.ini_options]
pythonpath = [".", "src"]
testpaths = ["tests"]
asyncio_mode = "auto"
addopts = "-p no:warnings" # Disabling warning capture entirely


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
